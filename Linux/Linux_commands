## ==========================
## OS INFORMATION
## ==========================
* `hostnamectl`
  - Displays OS info with kernel version, hostname, architecture

* `uname -a`
  - Displays system information, kernel version, hostname and architecture

* `cat /etc/os-release`
  - Displays OS info with distribution name, version, ID, and other details
  - Alternatively, use `cat /etc/*-release`

* `lsb_release -a`
  - Displays OS info with distribution ID, description, release number, and codename
  - Note: This command is not supported in Amazon Linux

## ==========================
## SHELL
## ==========================
* 'echo $0'
  - Displays the current shell

* 'cat /etc/shells'
  - Displays all the shell in the current system

* 'bash'
  - To change the current shell to 'bash'

# '#!/bin/bash'  (known as 'shebang' or 'hashbang')
  - Ensures that the script is executed using 'bash' regardless of the current shell

## ==========================
## DIRECTORY CREATION
## ==========================
* 'mkdir' (make directory)
  - Command to create a directory
  - mkdir my-dir
  - mkdir dir1 dir2 dir3  (creates multiple directories in a single go)
  - mkdir dir{1..20}  (create dir1 to dir20  in a single go)
  - mkdir -p /abc/def/my-dir  (creates 'my-dir' along with parent directories 'abc' & 'def'; p: parent)
  - mkdir -m 777 my-dir  (creates 'my-dir' with permissions, r/w/x permissions to owner, group & other users; m: mode)

## ==========================
## FILE COMMANDS
## ==========================
* 'touch'
  - Create empty files
  - touch file1
  - touch file1 file2 file3  (create multiple files in a single go)
  - touch file{1..20}  (create file1 to file20 in a single go)

* `echo`
  - Displays text passed as input.
  - Can also be used to input text into a file
  - echo "hello world" > file  (creates a new file if doesn't exists or replace text in the existing file)
  - echo "hello world" >> file (creates a new file if doesn't exists or add text in the existing file content)
  - echo -e "Line1\nLine2\nLine3" > file  (adds Line1 to Line3 one after other in the file)
  - printf "Line1\nLine2\nLine3" > file  (alternate command of the above command)

* 'cat'
  - Read a file
  - cat file1

* 'vi' (visual) or 'vim'
  - File editor
  - vi file1  (make necessary changes)
  - Use ":wq" to exit from file or use "q!" to exit forcefully

* 'nano'
  - File editor same as 'vi'
  - Use 'Ctrl X' --> 'Y' --> (Enter key) --> to save & exit
  - nano is basic command & mostly available in modern Linux OS

## ==========================
## USER
## ==========================
* `adduser` / `useradd`
  - Create user
  - adduser alexa
  - list of users can be checked using below command
  - cat /etc/passwd

* `userdel`
  - Delete user
  - userdel alexa

* `passwd`
  - Set user password

* `addgroup` / 'groupadd'
  - Create user group
  - addgroup amazon

* `delgroup`
  - Delete user group

* `gpasswd` (-a, -M) OR 'usermod'
  - Add user(s) to a group
  - gpasswd -a alexa amazon  (add 'alexa' to 'amazon' group)
  - gpasswd -M user1 user2 user3 my-group  (add multiple users to a group in one go) 
  - usermod -aG alexa amazon (alternate command)

* `whoami`
  - Shows the name of current user
  - Alternatively, we can use 'echo $USER'

* `su`
  - Switch user

## ===========================
## FILE/DIRECTORY PERMISSIONS
## ===========================
* `chown`
  - Change owner of file/directory

* `chgrp`
  - Change group of file/directory

* `chmod`
  - Change mod (r/w/x: 4/2/1)

* `umask`
  - Read/write/execute permissions

## ==========================
## FILE LINKS
## ==========================
* `ln`
  - Hardlink
  - Creates a shortcut of file, but the shortcut is still retained even after deleting the original file

* `ln -s`
  - Softlink
  - Creates a shortcut of file, but the shortcut becomes inaccessible after deleting the original file

## ==========================
## FILE CONTENT
## ==========================
* `more`
* `less`
* `head` (-n)
  - Shows content in first 10 lines of a file

* `tail` (-n)
  - Shows content in last 10 lines of a file

* `wc`
  - Word count

* `diff` (-y)
  - Compare difference between files

* `sort` (-r, -u)
* `uniq` (-d)
  - List unique items/duplicates

* `which`
  - Check location of app

## ==========================
## FIND CONTENT/FILE/FOLDER
## ==========================
* `file`
* `find`
  - Find `<path> -name <file/dir>` (e.g., `find / -type d -name 'my-dir'` to find only directories named 'my-dir')
  - find / -type d -name 'my-dir'  (finds only directory with name 'my-dir' in '/' location)
  - find / -name 'abc'  (finds file or directory with name 'abc' in '/' location)

* `locate`
  - Locate `<file/dir>` (To install use command `apt install -y plocate` or `apt install -y mlocate`)
  - locate my-dir
  - locate my-file | grep '^/home/ubuntu'  (searches for 'my-file' & filter out results only from '/home/ubuntu')

* `grep`
  - Global regular expression print

* `egrep`
  - Extended global regular expression print

* `cut` (-f)
  - View a specific content in a file

* `awk`
  - `awk {print $1} <file_name>` (Aho, Weinberger, and Kernighan)

* `sed`
  - Stream editor (e.g., `sed -e 's/oldtext/newtext/g' file-name`, where `s` means substitute and `g` means global)

## ==========================
## ZIP/TAR
## ==========================
* `tar`
  - Tape archive
  - `vf`: verbose forcefully (e.g., `tar -cvf name.tar <dir-name>` or `tar -xvf name.tar`)

* `gzip`
  - Gzip `name.tar`

* `gunzip`
  - Gunzip `name.tar.gz`

## =============================
## DISK FREE / DISK UTILIZATION
## =============================
* `df`
  - Disk free (drives)

* `du`
  - Disk utilization (directories/files)

## ==========================
## RUNNING PROCESSES
## ==========================
* `top`
  - Running performance

* `ps` (-ef)
  - Running processes (ef: all processes in a list format)
  - ps -a  (shows all running processes)
  - ps aux | grep jenkins  (filters out processes with name 'jenkins'  ('ps -ef' can also be used instead)

* `free -h`
  - Check the free & used RAM

## ==========================
## CONNECTIVITY
## ==========================
* `ping`
  - Ping `www.google.com`

* `netstat`
  - Shows a list of all active network connections & ports
  - (e.g., `apt install net-tools -y` and `netstat -tunlp`, where `t`: tcp, `u`: udp, `n`: numerical address, `l`: listening sockets, `p`: processID)

* `ifconfig`
  - View private IP

* `curl ifconfig.me`
  - View public IP

## ==========================
## DOWNLOAD PACKAGES
## ==========================
* `wget`
  - `wget <url>`

* `curl`
  - Advanced version of wget

## ==========================
## PACKAGE MANAGERS
## ==========================
* `apt`
  - Update/install/remove packages (apt: advanced package tool)

* `yum`
  - Update/install/remove packages (yum: yellowdog updater modified)

* `dnf`
  - Advanced version of `yum` (dnf: dandified yum)

## ==========================
## SCHEDULER
## ==========================
* `crontab` (-e)
  - Schedule a task in a specific period
  - `Min Hour Day Month Week-day number` (starts from Monday)
  - `* * * * *`

## ==========================
## OTHER COMMANDS
## ==========================
* `alias`
  - Replace an existing command with a user-defined one (e.g., `alias list='ls -la'`)

* `nohup`
  - No hangup

* `date`
  - Shows current date

* `cal`
  - (e.g., `apt install ncal -y`)

* `history`
  - Check the history of all the commands run in the server
